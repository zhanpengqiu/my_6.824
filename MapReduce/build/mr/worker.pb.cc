// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: worker.proto
// Protobuf C++ Version: 5.26.1

#include "worker.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace RpcModule {

inline constexpr QuitRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : quitsign_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QuitRequest::QuitRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QuitRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuitRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuitRequestDefaultTypeInternal() {}
  union {
    QuitRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuitRequestDefaultTypeInternal _QuitRequest_default_instance_;

inline constexpr QuitReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QuitReply::QuitReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QuitReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuitReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuitReplyDefaultTypeInternal() {}
  union {
    QuitReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuitReplyDefaultTypeInternal _QuitReply_default_instance_;

inline constexpr GetFileContentRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : file_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetFileContentRequest::GetFileContentRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetFileContentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFileContentRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFileContentRequestDefaultTypeInternal() {}
  union {
    GetFileContentRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFileContentRequestDefaultTypeInternal _GetFileContentRequest_default_instance_;

inline constexpr GetFileContentReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetFileContentReply::GetFileContentReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetFileContentReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFileContentReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFileContentReplyDefaultTypeInternal() {}
  union {
    GetFileContentReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFileContentReplyDefaultTypeInternal _GetFileContentReply_default_instance_;

inline constexpr CheckAliveRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CheckAliveRequest::CheckAliveRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CheckAliveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckAliveRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckAliveRequestDefaultTypeInternal() {}
  union {
    CheckAliveRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckAliveRequestDefaultTypeInternal _CheckAliveRequest_default_instance_;

inline constexpr CheckAliveReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CheckAliveReply::CheckAliveReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CheckAliveReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckAliveReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckAliveReplyDefaultTypeInternal() {}
  union {
    CheckAliveReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckAliveReplyDefaultTypeInternal _CheckAliveReply_default_instance_;

inline constexpr AssignTaskRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        task_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_{0},
        task_id_{0},
        task_type_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AssignTaskRequest::AssignTaskRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AssignTaskRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssignTaskRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssignTaskRequestDefaultTypeInternal() {}
  union {
    AssignTaskRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssignTaskRequestDefaultTypeInternal _AssignTaskRequest_default_instance_;

inline constexpr AssignTaskReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AssignTaskReply::AssignTaskReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AssignTaskReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssignTaskReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssignTaskReplyDefaultTypeInternal() {}
  union {
    AssignTaskReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssignTaskReplyDefaultTypeInternal _AssignTaskReply_default_instance_;
}  // namespace RpcModule
static ::_pb::Metadata file_level_metadata_worker_2eproto[8];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_worker_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_worker_2eproto = nullptr;
const ::uint32_t
    TableStruct_worker_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RpcModule::CheckAliveRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RpcModule::CheckAliveRequest, _impl_.status_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RpcModule::CheckAliveReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RpcModule::CheckAliveReply, _impl_.status_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RpcModule::QuitRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RpcModule::QuitRequest, _impl_.quitsign_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RpcModule::QuitReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RpcModule::QuitReply, _impl_.success_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RpcModule::AssignTaskRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RpcModule::AssignTaskRequest, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::AssignTaskRequest, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::AssignTaskRequest, _impl_.task_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::AssignTaskRequest, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::AssignTaskRequest, _impl_.task_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RpcModule::AssignTaskReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RpcModule::AssignTaskReply, _impl_.success_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RpcModule::GetFileContentRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RpcModule::GetFileContentRequest, _impl_.file_path_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RpcModule::GetFileContentReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RpcModule::GetFileContentReply, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::GetFileContentReply, _impl_.success_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::RpcModule::CheckAliveRequest)},
        {9, -1, -1, sizeof(::RpcModule::CheckAliveReply)},
        {18, -1, -1, sizeof(::RpcModule::QuitRequest)},
        {27, -1, -1, sizeof(::RpcModule::QuitReply)},
        {36, -1, -1, sizeof(::RpcModule::AssignTaskRequest)},
        {49, -1, -1, sizeof(::RpcModule::AssignTaskReply)},
        {58, -1, -1, sizeof(::RpcModule::GetFileContentRequest)},
        {67, -1, -1, sizeof(::RpcModule::GetFileContentReply)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::RpcModule::_CheckAliveRequest_default_instance_._instance,
    &::RpcModule::_CheckAliveReply_default_instance_._instance,
    &::RpcModule::_QuitRequest_default_instance_._instance,
    &::RpcModule::_QuitReply_default_instance_._instance,
    &::RpcModule::_AssignTaskRequest_default_instance_._instance,
    &::RpcModule::_AssignTaskReply_default_instance_._instance,
    &::RpcModule::_GetFileContentRequest_default_instance_._instance,
    &::RpcModule::_GetFileContentReply_default_instance_._instance,
};
const char descriptor_table_protodef_worker_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014worker.proto\022\tRpcModule\"#\n\021CheckAliveR"
    "equest\022\016\n\006status\030\001 \001(\010\"!\n\017CheckAliveRepl"
    "y\022\016\n\006status\030\001 \001(\010\"\037\n\013QuitRequest\022\020\n\010quit"
    "sign\030\001 \001(\010\"\034\n\tQuitReply\022\017\n\007success\030\001 \001(\010"
    "\"_\n\021AssignTaskRequest\022\n\n\002ip\030\001 \001(\t\022\014\n\004por"
    "t\030\002 \001(\005\022\014\n\004task\030\003 \001(\t\022\017\n\007task_id\030\004 \001(\005\022\021"
    "\n\ttask_type\030\005 \001(\005\"\"\n\017AssignTaskReply\022\017\n\007"
    "success\030\001 \001(\010\"*\n\025GetFileContentRequest\022\021"
    "\n\tfile_path\030\001 \001(\t\"7\n\023GetFileContentReply"
    "\022\017\n\007content\030\001 \001(\t\022\017\n\007success\030\002 \001(\0102\263\002\n\006W"
    "orker\022H\n\nCheckAlive\022\034.RpcModule.CheckAli"
    "veRequest\032\032.RpcModule.CheckAliveReply\"\000\022"
    "J\n\nAssignTask\022\034.RpcModule.AssignTaskRequ"
    "est\032\032.RpcModule.AssignTaskReply\"\000(\001\022W\n\021G"
    "etFileContentRpc\022 .RpcModule.GetFileCont"
    "entRequest\032\036.RpcModule.GetFileContentRep"
    "ly\"\000\022:\n\010QuitSign\022\026.RpcModule.QuitRequest"
    "\032\024.RpcModule.QuitReply\"\000B\006\242\002\003HLWb\006proto3"
};
static ::absl::once_flag descriptor_table_worker_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_worker_2eproto = {
    false,
    false,
    720,
    descriptor_table_protodef_worker_2eproto,
    "worker.proto",
    &descriptor_table_worker_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_worker_2eproto::offsets,
    file_level_metadata_worker_2eproto,
    file_level_enum_descriptors_worker_2eproto,
    file_level_service_descriptors_worker_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_worker_2eproto_getter() {
  return &descriptor_table_worker_2eproto;
}
namespace RpcModule {
// ===================================================================

class CheckAliveRequest::_Internal {
 public:
};

CheckAliveRequest::CheckAliveRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RpcModule.CheckAliveRequest)
}
CheckAliveRequest::CheckAliveRequest(
    ::google::protobuf::Arena* arena, const CheckAliveRequest& from)
    : CheckAliveRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CheckAliveRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CheckAliveRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
CheckAliveRequest::~CheckAliveRequest() {
  // @@protoc_insertion_point(destructor:RpcModule.CheckAliveRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CheckAliveRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CheckAliveRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CheckAliveRequest, _impl_._cached_size_),
              false,
          },
          &CheckAliveRequest::MergeImpl,
          &CheckAliveRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CheckAliveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RpcModule.CheckAliveRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CheckAliveRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CheckAliveRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CheckAliveRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RpcModule::CheckAliveRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CheckAliveRequest, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CheckAliveRequest, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool status = 1;
    {PROTOBUF_FIELD_OFFSET(CheckAliveRequest, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CheckAliveRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpcModule.CheckAliveRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpcModule.CheckAliveRequest)
  return target;
}

::size_t CheckAliveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RpcModule.CheckAliveRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CheckAliveRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CheckAliveRequest*>(&to_msg);
  auto& from = static_cast<const CheckAliveRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RpcModule.CheckAliveRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CheckAliveRequest::CopyFrom(const CheckAliveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RpcModule.CheckAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CheckAliveRequest::IsInitialized() const {
  return true;
}

void CheckAliveRequest::InternalSwap(CheckAliveRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata CheckAliveRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_worker_2eproto_getter,
                                   &descriptor_table_worker_2eproto_once,
                                   file_level_metadata_worker_2eproto[0]);
}
// ===================================================================

class CheckAliveReply::_Internal {
 public:
};

CheckAliveReply::CheckAliveReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RpcModule.CheckAliveReply)
}
CheckAliveReply::CheckAliveReply(
    ::google::protobuf::Arena* arena, const CheckAliveReply& from)
    : CheckAliveReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CheckAliveReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CheckAliveReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
CheckAliveReply::~CheckAliveReply() {
  // @@protoc_insertion_point(destructor:RpcModule.CheckAliveReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CheckAliveReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CheckAliveReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CheckAliveReply, _impl_._cached_size_),
              false,
          },
          &CheckAliveReply::MergeImpl,
          &CheckAliveReply::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CheckAliveReply::Clear() {
// @@protoc_insertion_point(message_clear_start:RpcModule.CheckAliveReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CheckAliveReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CheckAliveReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CheckAliveReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RpcModule::CheckAliveReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CheckAliveReply, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CheckAliveReply, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool status = 1;
    {PROTOBUF_FIELD_OFFSET(CheckAliveReply, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CheckAliveReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpcModule.CheckAliveReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpcModule.CheckAliveReply)
  return target;
}

::size_t CheckAliveReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RpcModule.CheckAliveReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CheckAliveReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CheckAliveReply*>(&to_msg);
  auto& from = static_cast<const CheckAliveReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RpcModule.CheckAliveReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CheckAliveReply::CopyFrom(const CheckAliveReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RpcModule.CheckAliveReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CheckAliveReply::IsInitialized() const {
  return true;
}

void CheckAliveReply::InternalSwap(CheckAliveReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata CheckAliveReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_worker_2eproto_getter,
                                   &descriptor_table_worker_2eproto_once,
                                   file_level_metadata_worker_2eproto[1]);
}
// ===================================================================

class QuitRequest::_Internal {
 public:
};

QuitRequest::QuitRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RpcModule.QuitRequest)
}
QuitRequest::QuitRequest(
    ::google::protobuf::Arena* arena, const QuitRequest& from)
    : QuitRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE QuitRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QuitRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.quitsign_ = {};
}
QuitRequest::~QuitRequest() {
  // @@protoc_insertion_point(destructor:RpcModule.QuitRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QuitRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
QuitRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(QuitRequest, _impl_._cached_size_),
              false,
          },
          &QuitRequest::MergeImpl,
          &QuitRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void QuitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RpcModule.QuitRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.quitsign_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QuitRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> QuitRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_QuitRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RpcModule::QuitRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool quitsign = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(QuitRequest, _impl_.quitsign_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(QuitRequest, _impl_.quitsign_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool quitsign = 1;
    {PROTOBUF_FIELD_OFFSET(QuitRequest, _impl_.quitsign_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* QuitRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpcModule.QuitRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool quitsign = 1;
  if (this->_internal_quitsign() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_quitsign(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpcModule.QuitRequest)
  return target;
}

::size_t QuitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RpcModule.QuitRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool quitsign = 1;
  if (this->_internal_quitsign() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void QuitRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QuitRequest*>(&to_msg);
  auto& from = static_cast<const QuitRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RpcModule.QuitRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_quitsign() != 0) {
    _this->_impl_.quitsign_ = from._impl_.quitsign_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QuitRequest::CopyFrom(const QuitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RpcModule.QuitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QuitRequest::IsInitialized() const {
  return true;
}

void QuitRequest::InternalSwap(QuitRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.quitsign_, other->_impl_.quitsign_);
}

::google::protobuf::Metadata QuitRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_worker_2eproto_getter,
                                   &descriptor_table_worker_2eproto_once,
                                   file_level_metadata_worker_2eproto[2]);
}
// ===================================================================

class QuitReply::_Internal {
 public:
};

QuitReply::QuitReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RpcModule.QuitReply)
}
QuitReply::QuitReply(
    ::google::protobuf::Arena* arena, const QuitReply& from)
    : QuitReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE QuitReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QuitReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
QuitReply::~QuitReply() {
  // @@protoc_insertion_point(destructor:RpcModule.QuitReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QuitReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
QuitReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(QuitReply, _impl_._cached_size_),
              false,
          },
          &QuitReply::MergeImpl,
          &QuitReply::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void QuitReply::Clear() {
// @@protoc_insertion_point(message_clear_start:RpcModule.QuitReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QuitReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> QuitReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_QuitReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RpcModule::QuitReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(QuitReply, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(QuitReply, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(QuitReply, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* QuitReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpcModule.QuitReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpcModule.QuitReply)
  return target;
}

::size_t QuitReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RpcModule.QuitReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void QuitReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QuitReply*>(&to_msg);
  auto& from = static_cast<const QuitReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RpcModule.QuitReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QuitReply::CopyFrom(const QuitReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RpcModule.QuitReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QuitReply::IsInitialized() const {
  return true;
}

void QuitReply::InternalSwap(QuitReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata QuitReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_worker_2eproto_getter,
                                   &descriptor_table_worker_2eproto_once,
                                   file_level_metadata_worker_2eproto[3]);
}
// ===================================================================

class AssignTaskRequest::_Internal {
 public:
};

AssignTaskRequest::AssignTaskRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RpcModule.AssignTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE AssignTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : ip_(arena, from.ip_),
        task_(arena, from.task_),
        _cached_size_{0} {}

AssignTaskRequest::AssignTaskRequest(
    ::google::protobuf::Arena* arena,
    const AssignTaskRequest& from)
    : ::google::protobuf::Message(arena) {
  AssignTaskRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, port_),
           offsetof(Impl_, task_type_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::task_type_));

  // @@protoc_insertion_point(copy_constructor:RpcModule.AssignTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE AssignTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ip_(arena),
        task_(arena),
        _cached_size_{0} {}

inline void AssignTaskRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           0,
           offsetof(Impl_, task_type_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::task_type_));
}
AssignTaskRequest::~AssignTaskRequest() {
  // @@protoc_insertion_point(destructor:RpcModule.AssignTaskRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AssignTaskRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ip_.Destroy();
  _impl_.task_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AssignTaskRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AssignTaskRequest, _impl_._cached_size_),
              false,
          },
          &AssignTaskRequest::MergeImpl,
          &AssignTaskRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AssignTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RpcModule.AssignTaskRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.ClearToEmpty();
  _impl_.task_.ClearToEmpty();
  ::memset(&_impl_.port_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.task_type_) -
      reinterpret_cast<char*>(&_impl_.port_)) + sizeof(_impl_.task_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AssignTaskRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 42, 2> AssignTaskRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AssignTaskRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RpcModule::AssignTaskRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string ip = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AssignTaskRequest, _impl_.ip_)}},
    // int32 port = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AssignTaskRequest, _impl_.port_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AssignTaskRequest, _impl_.port_)}},
    // string task = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AssignTaskRequest, _impl_.task_)}},
    // int32 task_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AssignTaskRequest, _impl_.task_id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AssignTaskRequest, _impl_.task_id_)}},
    // int32 task_type = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AssignTaskRequest, _impl_.task_type_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AssignTaskRequest, _impl_.task_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string ip = 1;
    {PROTOBUF_FIELD_OFFSET(AssignTaskRequest, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 2;
    {PROTOBUF_FIELD_OFFSET(AssignTaskRequest, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string task = 3;
    {PROTOBUF_FIELD_OFFSET(AssignTaskRequest, _impl_.task_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 task_id = 4;
    {PROTOBUF_FIELD_OFFSET(AssignTaskRequest, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 task_type = 5;
    {PROTOBUF_FIELD_OFFSET(AssignTaskRequest, _impl_.task_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\33\2\0\4\0\0\0\0"
    "RpcModule.AssignTaskRequest"
    "ip"
    "task"
  }},
};

::uint8_t* AssignTaskRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpcModule.AssignTaskRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string ip = 1;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RpcModule.AssignTaskRequest.ip");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 port = 2;
  if (this->_internal_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_port(), target);
  }

  // string task = 3;
  if (!this->_internal_task().empty()) {
    const std::string& _s = this->_internal_task();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RpcModule.AssignTaskRequest.task");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 task_id = 4;
  if (this->_internal_task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_task_id(), target);
  }

  // int32 task_type = 5;
  if (this->_internal_task_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_task_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpcModule.AssignTaskRequest)
  return target;
}

::size_t AssignTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RpcModule.AssignTaskRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  // string task = 3;
  if (!this->_internal_task().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_task());
  }

  // int32 port = 2;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_port());
  }

  // int32 task_id = 4;
  if (this->_internal_task_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_task_id());
  }

  // int32 task_type = 5;
  if (this->_internal_task_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_task_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AssignTaskRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AssignTaskRequest*>(&to_msg);
  auto& from = static_cast<const AssignTaskRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RpcModule.AssignTaskRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (!from._internal_task().empty()) {
    _this->_internal_set_task(from._internal_task());
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  if (from._internal_task_id() != 0) {
    _this->_impl_.task_id_ = from._impl_.task_id_;
  }
  if (from._internal_task_type() != 0) {
    _this->_impl_.task_type_ = from._impl_.task_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AssignTaskRequest::CopyFrom(const AssignTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RpcModule.AssignTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AssignTaskRequest::IsInitialized() const {
  return true;
}

void AssignTaskRequest::InternalSwap(AssignTaskRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_, &other->_impl_.task_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AssignTaskRequest, _impl_.task_type_)
      + sizeof(AssignTaskRequest::_impl_.task_type_)
      - PROTOBUF_FIELD_OFFSET(AssignTaskRequest, _impl_.port_)>(
          reinterpret_cast<char*>(&_impl_.port_),
          reinterpret_cast<char*>(&other->_impl_.port_));
}

::google::protobuf::Metadata AssignTaskRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_worker_2eproto_getter,
                                   &descriptor_table_worker_2eproto_once,
                                   file_level_metadata_worker_2eproto[4]);
}
// ===================================================================

class AssignTaskReply::_Internal {
 public:
};

AssignTaskReply::AssignTaskReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RpcModule.AssignTaskReply)
}
AssignTaskReply::AssignTaskReply(
    ::google::protobuf::Arena* arena, const AssignTaskReply& from)
    : AssignTaskReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AssignTaskReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AssignTaskReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
AssignTaskReply::~AssignTaskReply() {
  // @@protoc_insertion_point(destructor:RpcModule.AssignTaskReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AssignTaskReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AssignTaskReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AssignTaskReply, _impl_._cached_size_),
              false,
          },
          &AssignTaskReply::MergeImpl,
          &AssignTaskReply::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AssignTaskReply::Clear() {
// @@protoc_insertion_point(message_clear_start:RpcModule.AssignTaskReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AssignTaskReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AssignTaskReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AssignTaskReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RpcModule::AssignTaskReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AssignTaskReply, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AssignTaskReply, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(AssignTaskReply, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AssignTaskReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpcModule.AssignTaskReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpcModule.AssignTaskReply)
  return target;
}

::size_t AssignTaskReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RpcModule.AssignTaskReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AssignTaskReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AssignTaskReply*>(&to_msg);
  auto& from = static_cast<const AssignTaskReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RpcModule.AssignTaskReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AssignTaskReply::CopyFrom(const AssignTaskReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RpcModule.AssignTaskReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AssignTaskReply::IsInitialized() const {
  return true;
}

void AssignTaskReply::InternalSwap(AssignTaskReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata AssignTaskReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_worker_2eproto_getter,
                                   &descriptor_table_worker_2eproto_once,
                                   file_level_metadata_worker_2eproto[5]);
}
// ===================================================================

class GetFileContentRequest::_Internal {
 public:
};

GetFileContentRequest::GetFileContentRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RpcModule.GetFileContentRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetFileContentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : file_path_(arena, from.file_path_),
        _cached_size_{0} {}

GetFileContentRequest::GetFileContentRequest(
    ::google::protobuf::Arena* arena,
    const GetFileContentRequest& from)
    : ::google::protobuf::Message(arena) {
  GetFileContentRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:RpcModule.GetFileContentRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetFileContentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : file_path_(arena),
        _cached_size_{0} {}

inline void GetFileContentRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetFileContentRequest::~GetFileContentRequest() {
  // @@protoc_insertion_point(destructor:RpcModule.GetFileContentRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetFileContentRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.file_path_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetFileContentRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetFileContentRequest, _impl_._cached_size_),
              false,
          },
          &GetFileContentRequest::MergeImpl,
          &GetFileContentRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GetFileContentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RpcModule.GetFileContentRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_path_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetFileContentRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 49, 2> GetFileContentRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetFileContentRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RpcModule::GetFileContentRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string file_path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetFileContentRequest, _impl_.file_path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string file_path = 1;
    {PROTOBUF_FIELD_OFFSET(GetFileContentRequest, _impl_.file_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\11\0\0\0\0\0\0"
    "RpcModule.GetFileContentRequest"
    "file_path"
  }},
};

::uint8_t* GetFileContentRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpcModule.GetFileContentRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string file_path = 1;
  if (!this->_internal_file_path().empty()) {
    const std::string& _s = this->_internal_file_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RpcModule.GetFileContentRequest.file_path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpcModule.GetFileContentRequest)
  return target;
}

::size_t GetFileContentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RpcModule.GetFileContentRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_path = 1;
  if (!this->_internal_file_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_file_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetFileContentRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetFileContentRequest*>(&to_msg);
  auto& from = static_cast<const GetFileContentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RpcModule.GetFileContentRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file_path().empty()) {
    _this->_internal_set_file_path(from._internal_file_path());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetFileContentRequest::CopyFrom(const GetFileContentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RpcModule.GetFileContentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetFileContentRequest::IsInitialized() const {
  return true;
}

void GetFileContentRequest::InternalSwap(GetFileContentRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_path_, &other->_impl_.file_path_, arena);
}

::google::protobuf::Metadata GetFileContentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_worker_2eproto_getter,
                                   &descriptor_table_worker_2eproto_once,
                                   file_level_metadata_worker_2eproto[6]);
}
// ===================================================================

class GetFileContentReply::_Internal {
 public:
};

GetFileContentReply::GetFileContentReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RpcModule.GetFileContentReply)
}
inline PROTOBUF_NDEBUG_INLINE GetFileContentReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : content_(arena, from.content_),
        _cached_size_{0} {}

GetFileContentReply::GetFileContentReply(
    ::google::protobuf::Arena* arena,
    const GetFileContentReply& from)
    : ::google::protobuf::Message(arena) {
  GetFileContentReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:RpcModule.GetFileContentReply)
}
inline PROTOBUF_NDEBUG_INLINE GetFileContentReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : content_(arena),
        _cached_size_{0} {}

inline void GetFileContentReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
GetFileContentReply::~GetFileContentReply() {
  // @@protoc_insertion_point(destructor:RpcModule.GetFileContentReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetFileContentReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.content_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetFileContentReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetFileContentReply, _impl_._cached_size_),
              false,
          },
          &GetFileContentReply::MergeImpl,
          &GetFileContentReply::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GetFileContentReply::Clear() {
// @@protoc_insertion_point(message_clear_start:RpcModule.GetFileContentReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetFileContentReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 45, 2> GetFileContentReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetFileContentReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RpcModule::GetFileContentReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool success = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetFileContentReply, _impl_.success_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetFileContentReply, _impl_.success_)}},
    // string content = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetFileContentReply, _impl_.content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string content = 1;
    {PROTOBUF_FIELD_OFFSET(GetFileContentReply, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool success = 2;
    {PROTOBUF_FIELD_OFFSET(GetFileContentReply, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\35\7\0\0\0\0\0\0"
    "RpcModule.GetFileContentReply"
    "content"
  }},
};

::uint8_t* GetFileContentReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpcModule.GetFileContentReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RpcModule.GetFileContentReply.content");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpcModule.GetFileContentReply)
  return target;
}

::size_t GetFileContentReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RpcModule.GetFileContentReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 1;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_content());
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetFileContentReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetFileContentReply*>(&to_msg);
  auto& from = static_cast<const GetFileContentReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RpcModule.GetFileContentReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetFileContentReply::CopyFrom(const GetFileContentReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RpcModule.GetFileContentReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetFileContentReply::IsInitialized() const {
  return true;
}

void GetFileContentReply::InternalSwap(GetFileContentReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata GetFileContentReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_worker_2eproto_getter,
                                   &descriptor_table_worker_2eproto_once,
                                   file_level_metadata_worker_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace RpcModule
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_worker_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
