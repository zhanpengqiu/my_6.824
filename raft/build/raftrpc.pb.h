// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raftrpc.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_raftrpc_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_raftrpc_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_raftrpc_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_raftrpc_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_raftrpc_2eproto;
namespace RpcModule {
class AppendntriesReply;
struct AppendntriesReplyDefaultTypeInternal;
extern AppendntriesReplyDefaultTypeInternal _AppendntriesReply_default_instance_;
class AppendntriesRequest;
struct AppendntriesRequestDefaultTypeInternal;
extern AppendntriesRequestDefaultTypeInternal _AppendntriesRequest_default_instance_;
class Entry;
struct EntryDefaultTypeInternal;
extern EntryDefaultTypeInternal _Entry_default_instance_;
class InstallSnapshotReply;
struct InstallSnapshotReplyDefaultTypeInternal;
extern InstallSnapshotReplyDefaultTypeInternal _InstallSnapshotReply_default_instance_;
class InstallSnapshotRequest;
struct InstallSnapshotRequestDefaultTypeInternal;
extern InstallSnapshotRequestDefaultTypeInternal _InstallSnapshotRequest_default_instance_;
class RequestVoteReply;
struct RequestVoteReplyDefaultTypeInternal;
extern RequestVoteReplyDefaultTypeInternal _RequestVoteReply_default_instance_;
class RequestVoteRequest;
struct RequestVoteRequestDefaultTypeInternal;
extern RequestVoteRequestDefaultTypeInternal _RequestVoteRequest_default_instance_;
class StateMachine;
struct StateMachineDefaultTypeInternal;
extern StateMachineDefaultTypeInternal _StateMachine_default_instance_;
}  // namespace RpcModule
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace RpcModule {

// ===================================================================


// -------------------------------------------------------------------

class StateMachine final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RpcModule.StateMachine) */ {
 public:
  inline StateMachine() : StateMachine(nullptr) {}
  ~StateMachine() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StateMachine(
      ::google::protobuf::internal::ConstantInitialized);

  inline StateMachine(const StateMachine& from) : StateMachine(nullptr, from) {}
  inline StateMachine(StateMachine&& from) noexcept
      : StateMachine(nullptr, std::move(from)) {}
  inline StateMachine& operator=(const StateMachine& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateMachine& operator=(StateMachine&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StateMachine& default_instance() {
    return *internal_default_instance();
  }
  static inline const StateMachine* internal_default_instance() {
    return reinterpret_cast<const StateMachine*>(
        &_StateMachine_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(StateMachine& a, StateMachine& b) { a.Swap(&b); }
  inline void Swap(StateMachine* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StateMachine* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StateMachine* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StateMachine>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StateMachine& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StateMachine& from) { StateMachine::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StateMachine* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RpcModule.StateMachine"; }

 protected:
  explicit StateMachine(::google::protobuf::Arena* arena);
  StateMachine(::google::protobuf::Arena* arena, const StateMachine& from);
  StateMachine(::google::protobuf::Arena* arena, StateMachine&& from) noexcept
      : StateMachine(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 3,
    kIndexFieldNumber = 1,
    kTermFieldNumber = 2,
  };
  // string data = 3;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // int32 index = 1;
  void clear_index() ;
  ::int32_t index() const;
  void set_index(::int32_t value);

  private:
  ::int32_t _internal_index() const;
  void _internal_set_index(::int32_t value);

  public:
  // int32 term = 2;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RpcModule.StateMachine)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      35, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int32_t index_;
    ::int32_t term_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftrpc_2eproto;
};
// -------------------------------------------------------------------

class RequestVoteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RpcModule.RequestVoteRequest) */ {
 public:
  inline RequestVoteRequest() : RequestVoteRequest(nullptr) {}
  ~RequestVoteRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestVoteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestVoteRequest(const RequestVoteRequest& from) : RequestVoteRequest(nullptr, from) {}
  inline RequestVoteRequest(RequestVoteRequest&& from) noexcept
      : RequestVoteRequest(nullptr, std::move(from)) {}
  inline RequestVoteRequest& operator=(const RequestVoteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestVoteRequest& operator=(RequestVoteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestVoteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestVoteRequest* internal_default_instance() {
    return reinterpret_cast<const RequestVoteRequest*>(
        &_RequestVoteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(RequestVoteRequest& a, RequestVoteRequest& b) { a.Swap(&b); }
  inline void Swap(RequestVoteRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestVoteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestVoteRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RequestVoteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestVoteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestVoteRequest& from) { RequestVoteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequestVoteRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RpcModule.RequestVoteRequest"; }

 protected:
  explicit RequestVoteRequest(::google::protobuf::Arena* arena);
  RequestVoteRequest(::google::protobuf::Arena* arena, const RequestVoteRequest& from);
  RequestVoteRequest(::google::protobuf::Arena* arena, RequestVoteRequest&& from) noexcept
      : RequestVoteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTermFieldNumber = 1,
    kCandidateIdFieldNumber = 2,
    kLastLogIndexFieldNumber = 3,
    kLastLogTermFieldNumber = 4,
  };
  // int32 term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // int32 candidateId = 2;
  void clear_candidateid() ;
  ::int32_t candidateid() const;
  void set_candidateid(::int32_t value);

  private:
  ::int32_t _internal_candidateid() const;
  void _internal_set_candidateid(::int32_t value);

  public:
  // int32 lastLogIndex = 3;
  void clear_lastlogindex() ;
  ::int32_t lastlogindex() const;
  void set_lastlogindex(::int32_t value);

  private:
  ::int32_t _internal_lastlogindex() const;
  void _internal_set_lastlogindex(::int32_t value);

  public:
  // int32 lastLogTerm = 4;
  void clear_lastlogterm() ;
  ::int32_t lastlogterm() const;
  void set_lastlogterm(::int32_t value);

  private:
  ::int32_t _internal_lastlogterm() const;
  void _internal_set_lastlogterm(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RpcModule.RequestVoteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t term_;
    ::int32_t candidateid_;
    ::int32_t lastlogindex_;
    ::int32_t lastlogterm_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftrpc_2eproto;
};
// -------------------------------------------------------------------

class RequestVoteReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RpcModule.RequestVoteReply) */ {
 public:
  inline RequestVoteReply() : RequestVoteReply(nullptr) {}
  ~RequestVoteReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestVoteReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestVoteReply(const RequestVoteReply& from) : RequestVoteReply(nullptr, from) {}
  inline RequestVoteReply(RequestVoteReply&& from) noexcept
      : RequestVoteReply(nullptr, std::move(from)) {}
  inline RequestVoteReply& operator=(const RequestVoteReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestVoteReply& operator=(RequestVoteReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestVoteReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestVoteReply* internal_default_instance() {
    return reinterpret_cast<const RequestVoteReply*>(
        &_RequestVoteReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(RequestVoteReply& a, RequestVoteReply& b) { a.Swap(&b); }
  inline void Swap(RequestVoteReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestVoteReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestVoteReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RequestVoteReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestVoteReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestVoteReply& from) { RequestVoteReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequestVoteReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RpcModule.RequestVoteReply"; }

 protected:
  explicit RequestVoteReply(::google::protobuf::Arena* arena);
  RequestVoteReply(::google::protobuf::Arena* arena, const RequestVoteReply& from);
  RequestVoteReply(::google::protobuf::Arena* arena, RequestVoteReply&& from) noexcept
      : RequestVoteReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTermFieldNumber = 1,
    kVoteGrantedFieldNumber = 2,
  };
  // int32 term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // bool voteGranted = 2;
  void clear_votegranted() ;
  bool votegranted() const;
  void set_votegranted(bool value);

  private:
  bool _internal_votegranted() const;
  void _internal_set_votegranted(bool value);

  public:
  // @@protoc_insertion_point(class_scope:RpcModule.RequestVoteReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t term_;
    bool votegranted_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftrpc_2eproto;
};
// -------------------------------------------------------------------

class InstallSnapshotReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RpcModule.InstallSnapshotReply) */ {
 public:
  inline InstallSnapshotReply() : InstallSnapshotReply(nullptr) {}
  ~InstallSnapshotReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InstallSnapshotReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline InstallSnapshotReply(const InstallSnapshotReply& from) : InstallSnapshotReply(nullptr, from) {}
  inline InstallSnapshotReply(InstallSnapshotReply&& from) noexcept
      : InstallSnapshotReply(nullptr, std::move(from)) {}
  inline InstallSnapshotReply& operator=(const InstallSnapshotReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline InstallSnapshotReply& operator=(InstallSnapshotReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InstallSnapshotReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const InstallSnapshotReply* internal_default_instance() {
    return reinterpret_cast<const InstallSnapshotReply*>(
        &_InstallSnapshotReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(InstallSnapshotReply& a, InstallSnapshotReply& b) { a.Swap(&b); }
  inline void Swap(InstallSnapshotReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InstallSnapshotReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InstallSnapshotReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<InstallSnapshotReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InstallSnapshotReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InstallSnapshotReply& from) { InstallSnapshotReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InstallSnapshotReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RpcModule.InstallSnapshotReply"; }

 protected:
  explicit InstallSnapshotReply(::google::protobuf::Arena* arena);
  InstallSnapshotReply(::google::protobuf::Arena* arena, const InstallSnapshotReply& from);
  InstallSnapshotReply(::google::protobuf::Arena* arena, InstallSnapshotReply&& from) noexcept
      : InstallSnapshotReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTermFieldNumber = 1,
  };
  // int32 term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RpcModule.InstallSnapshotReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t term_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftrpc_2eproto;
};
// -------------------------------------------------------------------

class Entry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RpcModule.Entry) */ {
 public:
  inline Entry() : Entry(nullptr) {}
  ~Entry() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Entry(
      ::google::protobuf::internal::ConstantInitialized);

  inline Entry(const Entry& from) : Entry(nullptr, from) {}
  inline Entry(Entry&& from) noexcept
      : Entry(nullptr, std::move(from)) {}
  inline Entry& operator=(const Entry& from) {
    CopyFrom(from);
    return *this;
  }
  inline Entry& operator=(Entry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Entry& default_instance() {
    return *internal_default_instance();
  }
  static inline const Entry* internal_default_instance() {
    return reinterpret_cast<const Entry*>(
        &_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Entry& a, Entry& b) { a.Swap(&b); }
  inline void Swap(Entry* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Entry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Entry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Entry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Entry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Entry& from) { Entry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Entry* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RpcModule.Entry"; }

 protected:
  explicit Entry(::google::protobuf::Arena* arena);
  Entry(::google::protobuf::Arena* arena, const Entry& from);
  Entry(::google::protobuf::Arena* arena, Entry&& from) noexcept
      : Entry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCmdFieldNumber = 1,
    kTermFieldNumber = 2,
    kIndexFieldNumber = 3,
  };
  // string cmd = 1;
  void clear_cmd() ;
  const std::string& cmd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cmd(Arg_&& arg, Args_... args);
  std::string* mutable_cmd();
  PROTOBUF_NODISCARD std::string* release_cmd();
  void set_allocated_cmd(std::string* value);

  private:
  const std::string& _internal_cmd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cmd(
      const std::string& value);
  std::string* _internal_mutable_cmd();

  public:
  // int32 term = 2;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // int32 index = 3;
  void clear_index() ;
  ::int32_t index() const;
  void set_index(::int32_t value);

  private:
  ::int32_t _internal_index() const;
  void _internal_set_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RpcModule.Entry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      27, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr cmd_;
    ::int32_t term_;
    ::int32_t index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftrpc_2eproto;
};
// -------------------------------------------------------------------

class AppendntriesReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RpcModule.AppendntriesReply) */ {
 public:
  inline AppendntriesReply() : AppendntriesReply(nullptr) {}
  ~AppendntriesReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AppendntriesReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline AppendntriesReply(const AppendntriesReply& from) : AppendntriesReply(nullptr, from) {}
  inline AppendntriesReply(AppendntriesReply&& from) noexcept
      : AppendntriesReply(nullptr, std::move(from)) {}
  inline AppendntriesReply& operator=(const AppendntriesReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppendntriesReply& operator=(AppendntriesReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AppendntriesReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const AppendntriesReply* internal_default_instance() {
    return reinterpret_cast<const AppendntriesReply*>(
        &_AppendntriesReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(AppendntriesReply& a, AppendntriesReply& b) { a.Swap(&b); }
  inline void Swap(AppendntriesReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AppendntriesReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AppendntriesReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AppendntriesReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AppendntriesReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AppendntriesReply& from) { AppendntriesReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AppendntriesReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RpcModule.AppendntriesReply"; }

 protected:
  explicit AppendntriesReply(::google::protobuf::Arena* arena);
  AppendntriesReply(::google::protobuf::Arena* arena, const AppendntriesReply& from);
  AppendntriesReply(::google::protobuf::Arena* arena, AppendntriesReply&& from) noexcept
      : AppendntriesReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTermFieldNumber = 1,
    kMatchIndexFieldNumber = 3,
    kSuccessFieldNumber = 2,
    kInstallsnapshotFieldNumber = 4,
  };
  // int32 term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // int32 matchIndex = 3;
  void clear_matchindex() ;
  ::int32_t matchindex() const;
  void set_matchindex(::int32_t value);

  private:
  ::int32_t _internal_matchindex() const;
  void _internal_set_matchindex(::int32_t value);

  public:
  // bool success = 2;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // bool installsnapshot = 4;
  void clear_installsnapshot() ;
  bool installsnapshot() const;
  void set_installsnapshot(bool value);

  private:
  bool _internal_installsnapshot() const;
  void _internal_set_installsnapshot(bool value);

  public:
  // @@protoc_insertion_point(class_scope:RpcModule.AppendntriesReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t term_;
    ::int32_t matchindex_;
    bool success_;
    bool installsnapshot_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftrpc_2eproto;
};
// -------------------------------------------------------------------

class InstallSnapshotRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RpcModule.InstallSnapshotRequest) */ {
 public:
  inline InstallSnapshotRequest() : InstallSnapshotRequest(nullptr) {}
  ~InstallSnapshotRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InstallSnapshotRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline InstallSnapshotRequest(const InstallSnapshotRequest& from) : InstallSnapshotRequest(nullptr, from) {}
  inline InstallSnapshotRequest(InstallSnapshotRequest&& from) noexcept
      : InstallSnapshotRequest(nullptr, std::move(from)) {}
  inline InstallSnapshotRequest& operator=(const InstallSnapshotRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InstallSnapshotRequest& operator=(InstallSnapshotRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InstallSnapshotRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const InstallSnapshotRequest* internal_default_instance() {
    return reinterpret_cast<const InstallSnapshotRequest*>(
        &_InstallSnapshotRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(InstallSnapshotRequest& a, InstallSnapshotRequest& b) { a.Swap(&b); }
  inline void Swap(InstallSnapshotRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InstallSnapshotRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InstallSnapshotRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<InstallSnapshotRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InstallSnapshotRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InstallSnapshotRequest& from) { InstallSnapshotRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InstallSnapshotRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RpcModule.InstallSnapshotRequest"; }

 protected:
  explicit InstallSnapshotRequest(::google::protobuf::Arena* arena);
  InstallSnapshotRequest(::google::protobuf::Arena* arena, const InstallSnapshotRequest& from);
  InstallSnapshotRequest(::google::protobuf::Arena* arena, InstallSnapshotRequest&& from) noexcept
      : InstallSnapshotRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatemachineFieldNumber = 5,
    kEntriesFieldNumber = 6,
    kTermFieldNumber = 1,
    kLeaderIdFieldNumber = 2,
    kLastIncludeIndexFieldNumber = 3,
    kLastIncludeTermFieldNumber = 4,
  };
  // repeated .RpcModule.StateMachine statemachine = 5;
  int statemachine_size() const;
  private:
  int _internal_statemachine_size() const;

  public:
  void clear_statemachine() ;
  ::RpcModule::StateMachine* mutable_statemachine(int index);
  ::google::protobuf::RepeatedPtrField<::RpcModule::StateMachine>* mutable_statemachine();

  private:
  const ::google::protobuf::RepeatedPtrField<::RpcModule::StateMachine>& _internal_statemachine() const;
  ::google::protobuf::RepeatedPtrField<::RpcModule::StateMachine>* _internal_mutable_statemachine();
  public:
  const ::RpcModule::StateMachine& statemachine(int index) const;
  ::RpcModule::StateMachine* add_statemachine();
  const ::google::protobuf::RepeatedPtrField<::RpcModule::StateMachine>& statemachine() const;
  // repeated .RpcModule.Entry entries = 6;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::RpcModule::Entry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>* mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>* _internal_mutable_entries();
  public:
  const ::RpcModule::Entry& entries(int index) const;
  ::RpcModule::Entry* add_entries();
  const ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>& entries() const;
  // int32 term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // int32 leaderId = 2;
  void clear_leaderid() ;
  ::int32_t leaderid() const;
  void set_leaderid(::int32_t value);

  private:
  ::int32_t _internal_leaderid() const;
  void _internal_set_leaderid(::int32_t value);

  public:
  // int32 lastIncludeIndex = 3;
  void clear_lastincludeindex() ;
  ::int32_t lastincludeindex() const;
  void set_lastincludeindex(::int32_t value);

  private:
  ::int32_t _internal_lastincludeindex() const;
  void _internal_set_lastincludeindex(::int32_t value);

  public:
  // int32 lastIncludeTerm = 4;
  void clear_lastincludeterm() ;
  ::int32_t lastincludeterm() const;
  void set_lastincludeterm(::int32_t value);

  private:
  ::int32_t _internal_lastincludeterm() const;
  void _internal_set_lastincludeterm(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RpcModule.InstallSnapshotRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::RpcModule::StateMachine > statemachine_;
    ::google::protobuf::RepeatedPtrField< ::RpcModule::Entry > entries_;
    ::int32_t term_;
    ::int32_t leaderid_;
    ::int32_t lastincludeindex_;
    ::int32_t lastincludeterm_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftrpc_2eproto;
};
// -------------------------------------------------------------------

class AppendntriesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RpcModule.AppendntriesRequest) */ {
 public:
  inline AppendntriesRequest() : AppendntriesRequest(nullptr) {}
  ~AppendntriesRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AppendntriesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AppendntriesRequest(const AppendntriesRequest& from) : AppendntriesRequest(nullptr, from) {}
  inline AppendntriesRequest(AppendntriesRequest&& from) noexcept
      : AppendntriesRequest(nullptr, std::move(from)) {}
  inline AppendntriesRequest& operator=(const AppendntriesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppendntriesRequest& operator=(AppendntriesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AppendntriesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AppendntriesRequest* internal_default_instance() {
    return reinterpret_cast<const AppendntriesRequest*>(
        &_AppendntriesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AppendntriesRequest& a, AppendntriesRequest& b) { a.Swap(&b); }
  inline void Swap(AppendntriesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AppendntriesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AppendntriesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AppendntriesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AppendntriesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AppendntriesRequest& from) { AppendntriesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AppendntriesRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RpcModule.AppendntriesRequest"; }

 protected:
  explicit AppendntriesRequest(::google::protobuf::Arena* arena);
  AppendntriesRequest(::google::protobuf::Arena* arena, const AppendntriesRequest& from);
  AppendntriesRequest(::google::protobuf::Arena* arena, AppendntriesRequest&& from) noexcept
      : AppendntriesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntriesFieldNumber = 5,
    kTermFieldNumber = 1,
    kLeaderIdFieldNumber = 2,
    kPrevLogIndexFieldNumber = 3,
    kPrevLogTermFieldNumber = 4,
    kCommitIndexFieldNumber = 6,
  };
  // repeated .RpcModule.Entry entries = 5;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::RpcModule::Entry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>* mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>* _internal_mutable_entries();
  public:
  const ::RpcModule::Entry& entries(int index) const;
  ::RpcModule::Entry* add_entries();
  const ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>& entries() const;
  // int32 term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // int32 leaderId = 2;
  void clear_leaderid() ;
  ::int32_t leaderid() const;
  void set_leaderid(::int32_t value);

  private:
  ::int32_t _internal_leaderid() const;
  void _internal_set_leaderid(::int32_t value);

  public:
  // int32 prevLogIndex = 3;
  void clear_prevlogindex() ;
  ::int32_t prevlogindex() const;
  void set_prevlogindex(::int32_t value);

  private:
  ::int32_t _internal_prevlogindex() const;
  void _internal_set_prevlogindex(::int32_t value);

  public:
  // int32 prevLogTerm = 4;
  void clear_prevlogterm() ;
  ::int32_t prevlogterm() const;
  void set_prevlogterm(::int32_t value);

  private:
  ::int32_t _internal_prevlogterm() const;
  void _internal_set_prevlogterm(::int32_t value);

  public:
  // int32 commitIndex = 6;
  void clear_commitindex() ;
  ::int32_t commitindex() const;
  void set_commitindex(::int32_t value);

  private:
  ::int32_t _internal_commitindex() const;
  void _internal_set_commitindex(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RpcModule.AppendntriesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::RpcModule::Entry > entries_;
    ::int32_t term_;
    ::int32_t leaderid_;
    ::int32_t prevlogindex_;
    ::int32_t prevlogterm_;
    ::int32_t commitindex_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raftrpc_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Entry

// string cmd = 1;
inline void Entry::clear_cmd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.ClearToEmpty();
}
inline const std::string& Entry::cmd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RpcModule.Entry.cmd)
  return _internal_cmd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Entry::set_cmd(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:RpcModule.Entry.cmd)
}
inline std::string* Entry::mutable_cmd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cmd();
  // @@protoc_insertion_point(field_mutable:RpcModule.Entry.cmd)
  return _s;
}
inline const std::string& Entry::_internal_cmd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cmd_.Get();
}
inline void Entry::_internal_set_cmd(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.Set(value, GetArena());
}
inline std::string* Entry::_internal_mutable_cmd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.cmd_.Mutable( GetArena());
}
inline std::string* Entry::release_cmd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:RpcModule.Entry.cmd)
  return _impl_.cmd_.Release();
}
inline void Entry::set_allocated_cmd(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cmd_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cmd_.IsDefault()) {
          _impl_.cmd_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:RpcModule.Entry.cmd)
}

// int32 term = 2;
inline void Entry::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = 0;
}
inline ::int32_t Entry::term() const {
  // @@protoc_insertion_point(field_get:RpcModule.Entry.term)
  return _internal_term();
}
inline void Entry::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RpcModule.Entry.term)
}
inline ::int32_t Entry::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void Entry::_internal_set_term(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// int32 index = 3;
inline void Entry::clear_index() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.index_ = 0;
}
inline ::int32_t Entry::index() const {
  // @@protoc_insertion_point(field_get:RpcModule.Entry.index)
  return _internal_index();
}
inline void Entry::set_index(::int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:RpcModule.Entry.index)
}
inline ::int32_t Entry::_internal_index() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.index_;
}
inline void Entry::_internal_set_index(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.index_ = value;
}

// -------------------------------------------------------------------

// StateMachine

// int32 index = 1;
inline void StateMachine::clear_index() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.index_ = 0;
}
inline ::int32_t StateMachine::index() const {
  // @@protoc_insertion_point(field_get:RpcModule.StateMachine.index)
  return _internal_index();
}
inline void StateMachine::set_index(::int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:RpcModule.StateMachine.index)
}
inline ::int32_t StateMachine::_internal_index() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.index_;
}
inline void StateMachine::_internal_set_index(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.index_ = value;
}

// int32 term = 2;
inline void StateMachine::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = 0;
}
inline ::int32_t StateMachine::term() const {
  // @@protoc_insertion_point(field_get:RpcModule.StateMachine.term)
  return _internal_term();
}
inline void StateMachine::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RpcModule.StateMachine.term)
}
inline ::int32_t StateMachine::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void StateMachine::_internal_set_term(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// string data = 3;
inline void StateMachine::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& StateMachine::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RpcModule.StateMachine.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StateMachine::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:RpcModule.StateMachine.data)
}
inline std::string* StateMachine::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:RpcModule.StateMachine.data)
  return _s;
}
inline const std::string& StateMachine::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void StateMachine::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* StateMachine::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* StateMachine::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:RpcModule.StateMachine.data)
  return _impl_.data_.Release();
}
inline void StateMachine::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:RpcModule.StateMachine.data)
}

// -------------------------------------------------------------------

// AppendntriesRequest

// int32 term = 1;
inline void AppendntriesRequest::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = 0;
}
inline ::int32_t AppendntriesRequest::term() const {
  // @@protoc_insertion_point(field_get:RpcModule.AppendntriesRequest.term)
  return _internal_term();
}
inline void AppendntriesRequest::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RpcModule.AppendntriesRequest.term)
}
inline ::int32_t AppendntriesRequest::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void AppendntriesRequest::_internal_set_term(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// int32 leaderId = 2;
inline void AppendntriesRequest::clear_leaderid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leaderid_ = 0;
}
inline ::int32_t AppendntriesRequest::leaderid() const {
  // @@protoc_insertion_point(field_get:RpcModule.AppendntriesRequest.leaderId)
  return _internal_leaderid();
}
inline void AppendntriesRequest::set_leaderid(::int32_t value) {
  _internal_set_leaderid(value);
  // @@protoc_insertion_point(field_set:RpcModule.AppendntriesRequest.leaderId)
}
inline ::int32_t AppendntriesRequest::_internal_leaderid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.leaderid_;
}
inline void AppendntriesRequest::_internal_set_leaderid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leaderid_ = value;
}

// int32 prevLogIndex = 3;
inline void AppendntriesRequest::clear_prevlogindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prevlogindex_ = 0;
}
inline ::int32_t AppendntriesRequest::prevlogindex() const {
  // @@protoc_insertion_point(field_get:RpcModule.AppendntriesRequest.prevLogIndex)
  return _internal_prevlogindex();
}
inline void AppendntriesRequest::set_prevlogindex(::int32_t value) {
  _internal_set_prevlogindex(value);
  // @@protoc_insertion_point(field_set:RpcModule.AppendntriesRequest.prevLogIndex)
}
inline ::int32_t AppendntriesRequest::_internal_prevlogindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prevlogindex_;
}
inline void AppendntriesRequest::_internal_set_prevlogindex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prevlogindex_ = value;
}

// int32 prevLogTerm = 4;
inline void AppendntriesRequest::clear_prevlogterm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prevlogterm_ = 0;
}
inline ::int32_t AppendntriesRequest::prevlogterm() const {
  // @@protoc_insertion_point(field_get:RpcModule.AppendntriesRequest.prevLogTerm)
  return _internal_prevlogterm();
}
inline void AppendntriesRequest::set_prevlogterm(::int32_t value) {
  _internal_set_prevlogterm(value);
  // @@protoc_insertion_point(field_set:RpcModule.AppendntriesRequest.prevLogTerm)
}
inline ::int32_t AppendntriesRequest::_internal_prevlogterm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prevlogterm_;
}
inline void AppendntriesRequest::_internal_set_prevlogterm(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prevlogterm_ = value;
}

// repeated .RpcModule.Entry entries = 5;
inline int AppendntriesRequest::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int AppendntriesRequest::entries_size() const {
  return _internal_entries_size();
}
inline void AppendntriesRequest::clear_entries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entries_.Clear();
}
inline ::RpcModule::Entry* AppendntriesRequest::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:RpcModule.AppendntriesRequest.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>* AppendntriesRequest::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RpcModule.AppendntriesRequest.entries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_entries();
}
inline const ::RpcModule::Entry& AppendntriesRequest::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RpcModule.AppendntriesRequest.entries)
  return _internal_entries().Get(index);
}
inline ::RpcModule::Entry* AppendntriesRequest::add_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::RpcModule::Entry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:RpcModule.AppendntriesRequest.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>& AppendntriesRequest::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RpcModule.AppendntriesRequest.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>&
AppendntriesRequest::_internal_entries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>*
AppendntriesRequest::_internal_mutable_entries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.entries_;
}

// int32 commitIndex = 6;
inline void AppendntriesRequest::clear_commitindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.commitindex_ = 0;
}
inline ::int32_t AppendntriesRequest::commitindex() const {
  // @@protoc_insertion_point(field_get:RpcModule.AppendntriesRequest.commitIndex)
  return _internal_commitindex();
}
inline void AppendntriesRequest::set_commitindex(::int32_t value) {
  _internal_set_commitindex(value);
  // @@protoc_insertion_point(field_set:RpcModule.AppendntriesRequest.commitIndex)
}
inline ::int32_t AppendntriesRequest::_internal_commitindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.commitindex_;
}
inline void AppendntriesRequest::_internal_set_commitindex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.commitindex_ = value;
}

// -------------------------------------------------------------------

// AppendntriesReply

// int32 term = 1;
inline void AppendntriesReply::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = 0;
}
inline ::int32_t AppendntriesReply::term() const {
  // @@protoc_insertion_point(field_get:RpcModule.AppendntriesReply.term)
  return _internal_term();
}
inline void AppendntriesReply::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RpcModule.AppendntriesReply.term)
}
inline ::int32_t AppendntriesReply::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void AppendntriesReply::_internal_set_term(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// bool success = 2;
inline void AppendntriesReply::clear_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = false;
}
inline bool AppendntriesReply::success() const {
  // @@protoc_insertion_point(field_get:RpcModule.AppendntriesReply.success)
  return _internal_success();
}
inline void AppendntriesReply::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:RpcModule.AppendntriesReply.success)
}
inline bool AppendntriesReply::_internal_success() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.success_;
}
inline void AppendntriesReply::_internal_set_success(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.success_ = value;
}

// int32 matchIndex = 3;
inline void AppendntriesReply::clear_matchindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.matchindex_ = 0;
}
inline ::int32_t AppendntriesReply::matchindex() const {
  // @@protoc_insertion_point(field_get:RpcModule.AppendntriesReply.matchIndex)
  return _internal_matchindex();
}
inline void AppendntriesReply::set_matchindex(::int32_t value) {
  _internal_set_matchindex(value);
  // @@protoc_insertion_point(field_set:RpcModule.AppendntriesReply.matchIndex)
}
inline ::int32_t AppendntriesReply::_internal_matchindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.matchindex_;
}
inline void AppendntriesReply::_internal_set_matchindex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.matchindex_ = value;
}

// bool installsnapshot = 4;
inline void AppendntriesReply::clear_installsnapshot() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.installsnapshot_ = false;
}
inline bool AppendntriesReply::installsnapshot() const {
  // @@protoc_insertion_point(field_get:RpcModule.AppendntriesReply.installsnapshot)
  return _internal_installsnapshot();
}
inline void AppendntriesReply::set_installsnapshot(bool value) {
  _internal_set_installsnapshot(value);
  // @@protoc_insertion_point(field_set:RpcModule.AppendntriesReply.installsnapshot)
}
inline bool AppendntriesReply::_internal_installsnapshot() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.installsnapshot_;
}
inline void AppendntriesReply::_internal_set_installsnapshot(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.installsnapshot_ = value;
}

// -------------------------------------------------------------------

// RequestVoteRequest

// int32 term = 1;
inline void RequestVoteRequest::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = 0;
}
inline ::int32_t RequestVoteRequest::term() const {
  // @@protoc_insertion_point(field_get:RpcModule.RequestVoteRequest.term)
  return _internal_term();
}
inline void RequestVoteRequest::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RpcModule.RequestVoteRequest.term)
}
inline ::int32_t RequestVoteRequest::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void RequestVoteRequest::_internal_set_term(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// int32 candidateId = 2;
inline void RequestVoteRequest::clear_candidateid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.candidateid_ = 0;
}
inline ::int32_t RequestVoteRequest::candidateid() const {
  // @@protoc_insertion_point(field_get:RpcModule.RequestVoteRequest.candidateId)
  return _internal_candidateid();
}
inline void RequestVoteRequest::set_candidateid(::int32_t value) {
  _internal_set_candidateid(value);
  // @@protoc_insertion_point(field_set:RpcModule.RequestVoteRequest.candidateId)
}
inline ::int32_t RequestVoteRequest::_internal_candidateid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.candidateid_;
}
inline void RequestVoteRequest::_internal_set_candidateid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.candidateid_ = value;
}

// int32 lastLogIndex = 3;
inline void RequestVoteRequest::clear_lastlogindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastlogindex_ = 0;
}
inline ::int32_t RequestVoteRequest::lastlogindex() const {
  // @@protoc_insertion_point(field_get:RpcModule.RequestVoteRequest.lastLogIndex)
  return _internal_lastlogindex();
}
inline void RequestVoteRequest::set_lastlogindex(::int32_t value) {
  _internal_set_lastlogindex(value);
  // @@protoc_insertion_point(field_set:RpcModule.RequestVoteRequest.lastLogIndex)
}
inline ::int32_t RequestVoteRequest::_internal_lastlogindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lastlogindex_;
}
inline void RequestVoteRequest::_internal_set_lastlogindex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastlogindex_ = value;
}

// int32 lastLogTerm = 4;
inline void RequestVoteRequest::clear_lastlogterm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastlogterm_ = 0;
}
inline ::int32_t RequestVoteRequest::lastlogterm() const {
  // @@protoc_insertion_point(field_get:RpcModule.RequestVoteRequest.lastLogTerm)
  return _internal_lastlogterm();
}
inline void RequestVoteRequest::set_lastlogterm(::int32_t value) {
  _internal_set_lastlogterm(value);
  // @@protoc_insertion_point(field_set:RpcModule.RequestVoteRequest.lastLogTerm)
}
inline ::int32_t RequestVoteRequest::_internal_lastlogterm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lastlogterm_;
}
inline void RequestVoteRequest::_internal_set_lastlogterm(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastlogterm_ = value;
}

// -------------------------------------------------------------------

// RequestVoteReply

// int32 term = 1;
inline void RequestVoteReply::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = 0;
}
inline ::int32_t RequestVoteReply::term() const {
  // @@protoc_insertion_point(field_get:RpcModule.RequestVoteReply.term)
  return _internal_term();
}
inline void RequestVoteReply::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RpcModule.RequestVoteReply.term)
}
inline ::int32_t RequestVoteReply::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void RequestVoteReply::_internal_set_term(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// bool voteGranted = 2;
inline void RequestVoteReply::clear_votegranted() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.votegranted_ = false;
}
inline bool RequestVoteReply::votegranted() const {
  // @@protoc_insertion_point(field_get:RpcModule.RequestVoteReply.voteGranted)
  return _internal_votegranted();
}
inline void RequestVoteReply::set_votegranted(bool value) {
  _internal_set_votegranted(value);
  // @@protoc_insertion_point(field_set:RpcModule.RequestVoteReply.voteGranted)
}
inline bool RequestVoteReply::_internal_votegranted() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.votegranted_;
}
inline void RequestVoteReply::_internal_set_votegranted(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.votegranted_ = value;
}

// -------------------------------------------------------------------

// InstallSnapshotRequest

// int32 term = 1;
inline void InstallSnapshotRequest::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = 0;
}
inline ::int32_t InstallSnapshotRequest::term() const {
  // @@protoc_insertion_point(field_get:RpcModule.InstallSnapshotRequest.term)
  return _internal_term();
}
inline void InstallSnapshotRequest::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RpcModule.InstallSnapshotRequest.term)
}
inline ::int32_t InstallSnapshotRequest::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void InstallSnapshotRequest::_internal_set_term(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

// int32 leaderId = 2;
inline void InstallSnapshotRequest::clear_leaderid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leaderid_ = 0;
}
inline ::int32_t InstallSnapshotRequest::leaderid() const {
  // @@protoc_insertion_point(field_get:RpcModule.InstallSnapshotRequest.leaderId)
  return _internal_leaderid();
}
inline void InstallSnapshotRequest::set_leaderid(::int32_t value) {
  _internal_set_leaderid(value);
  // @@protoc_insertion_point(field_set:RpcModule.InstallSnapshotRequest.leaderId)
}
inline ::int32_t InstallSnapshotRequest::_internal_leaderid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.leaderid_;
}
inline void InstallSnapshotRequest::_internal_set_leaderid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.leaderid_ = value;
}

// int32 lastIncludeIndex = 3;
inline void InstallSnapshotRequest::clear_lastincludeindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastincludeindex_ = 0;
}
inline ::int32_t InstallSnapshotRequest::lastincludeindex() const {
  // @@protoc_insertion_point(field_get:RpcModule.InstallSnapshotRequest.lastIncludeIndex)
  return _internal_lastincludeindex();
}
inline void InstallSnapshotRequest::set_lastincludeindex(::int32_t value) {
  _internal_set_lastincludeindex(value);
  // @@protoc_insertion_point(field_set:RpcModule.InstallSnapshotRequest.lastIncludeIndex)
}
inline ::int32_t InstallSnapshotRequest::_internal_lastincludeindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lastincludeindex_;
}
inline void InstallSnapshotRequest::_internal_set_lastincludeindex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastincludeindex_ = value;
}

// int32 lastIncludeTerm = 4;
inline void InstallSnapshotRequest::clear_lastincludeterm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastincludeterm_ = 0;
}
inline ::int32_t InstallSnapshotRequest::lastincludeterm() const {
  // @@protoc_insertion_point(field_get:RpcModule.InstallSnapshotRequest.lastIncludeTerm)
  return _internal_lastincludeterm();
}
inline void InstallSnapshotRequest::set_lastincludeterm(::int32_t value) {
  _internal_set_lastincludeterm(value);
  // @@protoc_insertion_point(field_set:RpcModule.InstallSnapshotRequest.lastIncludeTerm)
}
inline ::int32_t InstallSnapshotRequest::_internal_lastincludeterm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lastincludeterm_;
}
inline void InstallSnapshotRequest::_internal_set_lastincludeterm(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lastincludeterm_ = value;
}

// repeated .RpcModule.StateMachine statemachine = 5;
inline int InstallSnapshotRequest::_internal_statemachine_size() const {
  return _internal_statemachine().size();
}
inline int InstallSnapshotRequest::statemachine_size() const {
  return _internal_statemachine_size();
}
inline void InstallSnapshotRequest::clear_statemachine() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.statemachine_.Clear();
}
inline ::RpcModule::StateMachine* InstallSnapshotRequest::mutable_statemachine(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:RpcModule.InstallSnapshotRequest.statemachine)
  return _internal_mutable_statemachine()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::RpcModule::StateMachine>* InstallSnapshotRequest::mutable_statemachine()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RpcModule.InstallSnapshotRequest.statemachine)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_statemachine();
}
inline const ::RpcModule::StateMachine& InstallSnapshotRequest::statemachine(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RpcModule.InstallSnapshotRequest.statemachine)
  return _internal_statemachine().Get(index);
}
inline ::RpcModule::StateMachine* InstallSnapshotRequest::add_statemachine() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::RpcModule::StateMachine* _add = _internal_mutable_statemachine()->Add();
  // @@protoc_insertion_point(field_add:RpcModule.InstallSnapshotRequest.statemachine)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::RpcModule::StateMachine>& InstallSnapshotRequest::statemachine() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RpcModule.InstallSnapshotRequest.statemachine)
  return _internal_statemachine();
}
inline const ::google::protobuf::RepeatedPtrField<::RpcModule::StateMachine>&
InstallSnapshotRequest::_internal_statemachine() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.statemachine_;
}
inline ::google::protobuf::RepeatedPtrField<::RpcModule::StateMachine>*
InstallSnapshotRequest::_internal_mutable_statemachine() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.statemachine_;
}

// repeated .RpcModule.Entry entries = 6;
inline int InstallSnapshotRequest::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int InstallSnapshotRequest::entries_size() const {
  return _internal_entries_size();
}
inline void InstallSnapshotRequest::clear_entries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entries_.Clear();
}
inline ::RpcModule::Entry* InstallSnapshotRequest::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:RpcModule.InstallSnapshotRequest.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>* InstallSnapshotRequest::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RpcModule.InstallSnapshotRequest.entries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_entries();
}
inline const ::RpcModule::Entry& InstallSnapshotRequest::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RpcModule.InstallSnapshotRequest.entries)
  return _internal_entries().Get(index);
}
inline ::RpcModule::Entry* InstallSnapshotRequest::add_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::RpcModule::Entry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:RpcModule.InstallSnapshotRequest.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>& InstallSnapshotRequest::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RpcModule.InstallSnapshotRequest.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>&
InstallSnapshotRequest::_internal_entries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::RpcModule::Entry>*
InstallSnapshotRequest::_internal_mutable_entries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.entries_;
}

// -------------------------------------------------------------------

// InstallSnapshotReply

// int32 term = 1;
inline void InstallSnapshotReply::clear_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = 0;
}
inline ::int32_t InstallSnapshotReply::term() const {
  // @@protoc_insertion_point(field_get:RpcModule.InstallSnapshotReply.term)
  return _internal_term();
}
inline void InstallSnapshotReply::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RpcModule.InstallSnapshotReply.term)
}
inline ::int32_t InstallSnapshotReply::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_;
}
inline void InstallSnapshotReply::_internal_set_term(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace RpcModule


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_raftrpc_2eproto_2epb_2eh
