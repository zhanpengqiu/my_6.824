// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raftrpc.proto
// Protobuf C++ Version: 5.26.1

#include "raftrpc.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace RpcModule {

inline constexpr RequestVoteRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : term_{0},
        candidateid_{0},
        lastlogindex_{0},
        lastlogterm_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestVoteRequest::RequestVoteRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RequestVoteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestVoteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestVoteRequestDefaultTypeInternal() {}
  union {
    RequestVoteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestVoteRequestDefaultTypeInternal _RequestVoteRequest_default_instance_;

inline constexpr RequestVoteReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : term_{0},
        votegranted_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestVoteReply::RequestVoteReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RequestVoteReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestVoteReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestVoteReplyDefaultTypeInternal() {}
  union {
    RequestVoteReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestVoteReplyDefaultTypeInternal _RequestVoteReply_default_instance_;

inline constexpr Entry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        term_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Entry::Entry(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntryDefaultTypeInternal() {}
  union {
    Entry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntryDefaultTypeInternal _Entry_default_instance_;

inline constexpr AppendntriesReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : term_{0},
        success_{false},
        matchindex_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AppendntriesReply::AppendntriesReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppendntriesReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppendntriesReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppendntriesReplyDefaultTypeInternal() {}
  union {
    AppendntriesReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppendntriesReplyDefaultTypeInternal _AppendntriesReply_default_instance_;

inline constexpr AppendntriesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        term_{0},
        leaderid_{0},
        prevlogindex_{0},
        prevlogterm_{0},
        commitindex_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AppendntriesRequest::AppendntriesRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppendntriesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppendntriesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppendntriesRequestDefaultTypeInternal() {}
  union {
    AppendntriesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppendntriesRequestDefaultTypeInternal _AppendntriesRequest_default_instance_;
}  // namespace RpcModule
static ::_pb::Metadata file_level_metadata_raftrpc_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_raftrpc_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_raftrpc_2eproto = nullptr;
const ::uint32_t
    TableStruct_raftrpc_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RpcModule::Entry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RpcModule::Entry, _impl_.cmd_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::Entry, _impl_.term_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RpcModule::AppendntriesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RpcModule::AppendntriesRequest, _impl_.term_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::AppendntriesRequest, _impl_.leaderid_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::AppendntriesRequest, _impl_.prevlogindex_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::AppendntriesRequest, _impl_.prevlogterm_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::AppendntriesRequest, _impl_.entries_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::AppendntriesRequest, _impl_.commitindex_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RpcModule::AppendntriesReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RpcModule::AppendntriesReply, _impl_.term_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::AppendntriesReply, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::AppendntriesReply, _impl_.matchindex_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RpcModule::RequestVoteRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RpcModule::RequestVoteRequest, _impl_.term_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::RequestVoteRequest, _impl_.candidateid_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::RequestVoteRequest, _impl_.lastlogindex_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::RequestVoteRequest, _impl_.lastlogterm_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::RpcModule::RequestVoteReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RpcModule::RequestVoteReply, _impl_.term_),
        PROTOBUF_FIELD_OFFSET(::RpcModule::RequestVoteReply, _impl_.votegranted_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::RpcModule::Entry)},
        {10, -1, -1, sizeof(::RpcModule::AppendntriesRequest)},
        {24, -1, -1, sizeof(::RpcModule::AppendntriesReply)},
        {35, -1, -1, sizeof(::RpcModule::RequestVoteRequest)},
        {47, -1, -1, sizeof(::RpcModule::RequestVoteReply)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::RpcModule::_Entry_default_instance_._instance,
    &::RpcModule::_AppendntriesRequest_default_instance_._instance,
    &::RpcModule::_AppendntriesReply_default_instance_._instance,
    &::RpcModule::_RequestVoteRequest_default_instance_._instance,
    &::RpcModule::_RequestVoteReply_default_instance_._instance,
};
const char descriptor_table_protodef_raftrpc_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rraftrpc.proto\022\tRpcModule\"\"\n\005Entry\022\013\n\003c"
    "md\030\001 \001(\t\022\014\n\004term\030\002 \001(\005\"\230\001\n\023AppendntriesR"
    "equest\022\014\n\004term\030\001 \001(\005\022\020\n\010leaderId\030\002 \001(\005\022\024"
    "\n\014prevLogIndex\030\003 \001(\005\022\023\n\013prevLogTerm\030\004 \001("
    "\005\022!\n\007entries\030\005 \003(\0132\020.RpcModule.Entry\022\023\n\013"
    "commitIndex\030\006 \001(\005\"F\n\021AppendntriesReply\022\014"
    "\n\004term\030\001 \001(\005\022\017\n\007success\030\002 \001(\010\022\022\n\nmatchIn"
    "dex\030\003 \001(\005\"b\n\022RequestVoteRequest\022\014\n\004term\030"
    "\001 \001(\005\022\023\n\013candidateId\030\002 \001(\005\022\024\n\014lastLogInd"
    "ex\030\003 \001(\005\022\023\n\013lastLogTerm\030\004 \001(\005\"5\n\020Request"
    "VoteReply\022\014\n\004term\030\001 \001(\005\022\023\n\013voteGranted\030\002"
    " \001(\0102\245\001\n\006Rafter\022N\n\014Appendntries\022\036.RpcMod"
    "ule.AppendntriesRequest\032\034.RpcModule.Appe"
    "ndntriesReply\"\000\022K\n\013RequestVote\022\035.RpcModu"
    "le.RequestVoteRequest\032\033.RpcModule.Reques"
    "tVoteReply\"\000B\006\242\002\003HLWb\006proto3"
};
static ::absl::once_flag descriptor_table_raftrpc_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_raftrpc_2eproto = {
    false,
    false,
    628,
    descriptor_table_protodef_raftrpc_2eproto,
    "raftrpc.proto",
    &descriptor_table_raftrpc_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_raftrpc_2eproto::offsets,
    file_level_metadata_raftrpc_2eproto,
    file_level_enum_descriptors_raftrpc_2eproto,
    file_level_service_descriptors_raftrpc_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_raftrpc_2eproto_getter() {
  return &descriptor_table_raftrpc_2eproto;
}
namespace RpcModule {
// ===================================================================

class Entry::_Internal {
 public:
};

Entry::Entry(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RpcModule.Entry)
}
inline PROTOBUF_NDEBUG_INLINE Entry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cmd_(arena, from.cmd_),
        _cached_size_{0} {}

Entry::Entry(
    ::google::protobuf::Arena* arena,
    const Entry& from)
    : ::google::protobuf::Message(arena) {
  Entry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.term_ = from._impl_.term_;

  // @@protoc_insertion_point(copy_constructor:RpcModule.Entry)
}
inline PROTOBUF_NDEBUG_INLINE Entry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cmd_(arena),
        _cached_size_{0} {}

inline void Entry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.term_ = {};
}
Entry::~Entry() {
  // @@protoc_insertion_point(destructor:RpcModule.Entry)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Entry::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.cmd_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Entry::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Entry, _impl_._cached_size_),
              false,
          },
          &Entry::MergeImpl,
          &Entry::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:RpcModule.Entry)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cmd_.ClearToEmpty();
  _impl_.term_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Entry::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 27, 2> Entry::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Entry_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RpcModule::Entry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 term = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Entry, _impl_.term_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Entry, _impl_.term_)}},
    // string cmd = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Entry, _impl_.cmd_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string cmd = 1;
    {PROTOBUF_FIELD_OFFSET(Entry, _impl_.cmd_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 term = 2;
    {PROTOBUF_FIELD_OFFSET(Entry, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\17\3\0\0\0\0\0\0"
    "RpcModule.Entry"
    "cmd"
  }},
};

::uint8_t* Entry::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpcModule.Entry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string cmd = 1;
  if (!this->_internal_cmd().empty()) {
    const std::string& _s = this->_internal_cmd();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RpcModule.Entry.cmd");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 term = 2;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_term(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpcModule.Entry)
  return target;
}

::size_t Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RpcModule.Entry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cmd = 1;
  if (!this->_internal_cmd().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_cmd());
  }

  // int32 term = 2;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Entry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Entry*>(&to_msg);
  auto& from = static_cast<const Entry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RpcModule.Entry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cmd().empty()) {
    _this->_internal_set_cmd(from._internal_cmd());
  }
  if (from._internal_term() != 0) {
    _this->_impl_.term_ = from._impl_.term_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Entry::CopyFrom(const Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RpcModule.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Entry::IsInitialized() const {
  return true;
}

void Entry::InternalSwap(Entry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cmd_, &other->_impl_.cmd_, arena);
        swap(_impl_.term_, other->_impl_.term_);
}

::google::protobuf::Metadata Entry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_raftrpc_2eproto_getter,
                                   &descriptor_table_raftrpc_2eproto_once,
                                   file_level_metadata_raftrpc_2eproto[0]);
}
// ===================================================================

class AppendntriesRequest::_Internal {
 public:
};

AppendntriesRequest::AppendntriesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RpcModule.AppendntriesRequest)
}
inline PROTOBUF_NDEBUG_INLINE AppendntriesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : entries_{visibility, arena, from.entries_},
        _cached_size_{0} {}

AppendntriesRequest::AppendntriesRequest(
    ::google::protobuf::Arena* arena,
    const AppendntriesRequest& from)
    : ::google::protobuf::Message(arena) {
  AppendntriesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, term_),
           offsetof(Impl_, commitindex_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::commitindex_));

  // @@protoc_insertion_point(copy_constructor:RpcModule.AppendntriesRequest)
}
inline PROTOBUF_NDEBUG_INLINE AppendntriesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entries_{visibility, arena},
        _cached_size_{0} {}

inline void AppendntriesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           0,
           offsetof(Impl_, commitindex_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::commitindex_));
}
AppendntriesRequest::~AppendntriesRequest() {
  // @@protoc_insertion_point(destructor:RpcModule.AppendntriesRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppendntriesRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AppendntriesRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_._cached_size_),
              false,
          },
          &AppendntriesRequest::MergeImpl,
          &AppendntriesRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AppendntriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RpcModule.AppendntriesRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.commitindex_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.commitindex_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppendntriesRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> AppendntriesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AppendntriesRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RpcModule::AppendntriesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendntriesRequest, _impl_.term_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_.term_)}},
    // int32 leaderId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendntriesRequest, _impl_.leaderid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_.leaderid_)}},
    // int32 prevLogIndex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendntriesRequest, _impl_.prevlogindex_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_.prevlogindex_)}},
    // int32 prevLogTerm = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendntriesRequest, _impl_.prevlogterm_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_.prevlogterm_)}},
    // repeated .RpcModule.Entry entries = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_.entries_)}},
    // int32 commitIndex = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendntriesRequest, _impl_.commitindex_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_.commitindex_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 term = 1;
    {PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 leaderId = 2;
    {PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_.leaderid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 prevLogIndex = 3;
    {PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_.prevlogindex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 prevLogTerm = 4;
    {PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_.prevlogterm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .RpcModule.Entry entries = 5;
    {PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 commitIndex = 6;
    {PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_.commitindex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::RpcModule::Entry>()},
  }}, {{
  }},
};

::uint8_t* AppendntriesRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpcModule.AppendntriesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 term = 1;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_term(), target);
  }

  // int32 leaderId = 2;
  if (this->_internal_leaderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_leaderid(), target);
  }

  // int32 prevLogIndex = 3;
  if (this->_internal_prevlogindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_prevlogindex(), target);
  }

  // int32 prevLogTerm = 4;
  if (this->_internal_prevlogterm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_prevlogterm(), target);
  }

  // repeated .RpcModule.Entry entries = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_entries_size());
       i < n; i++) {
    const auto& repfield = this->_internal_entries().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 commitIndex = 6;
  if (this->_internal_commitindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_commitindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpcModule.AppendntriesRequest)
  return target;
}

::size_t AppendntriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RpcModule.AppendntriesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .RpcModule.Entry entries = 5;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->_internal_entries()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 term = 1;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  // int32 leaderId = 2;
  if (this->_internal_leaderid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_leaderid());
  }

  // int32 prevLogIndex = 3;
  if (this->_internal_prevlogindex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_prevlogindex());
  }

  // int32 prevLogTerm = 4;
  if (this->_internal_prevlogterm() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_prevlogterm());
  }

  // int32 commitIndex = 6;
  if (this->_internal_commitindex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_commitindex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AppendntriesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppendntriesRequest*>(&to_msg);
  auto& from = static_cast<const AppendntriesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RpcModule.AppendntriesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  if (from._internal_term() != 0) {
    _this->_impl_.term_ = from._impl_.term_;
  }
  if (from._internal_leaderid() != 0) {
    _this->_impl_.leaderid_ = from._impl_.leaderid_;
  }
  if (from._internal_prevlogindex() != 0) {
    _this->_impl_.prevlogindex_ = from._impl_.prevlogindex_;
  }
  if (from._internal_prevlogterm() != 0) {
    _this->_impl_.prevlogterm_ = from._impl_.prevlogterm_;
  }
  if (from._internal_commitindex() != 0) {
    _this->_impl_.commitindex_ = from._impl_.commitindex_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppendntriesRequest::CopyFrom(const AppendntriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RpcModule.AppendntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppendntriesRequest::IsInitialized() const {
  return true;
}

void AppendntriesRequest::InternalSwap(AppendntriesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_.commitindex_)
      + sizeof(AppendntriesRequest::_impl_.commitindex_)
      - PROTOBUF_FIELD_OFFSET(AppendntriesRequest, _impl_.term_)>(
          reinterpret_cast<char*>(&_impl_.term_),
          reinterpret_cast<char*>(&other->_impl_.term_));
}

::google::protobuf::Metadata AppendntriesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_raftrpc_2eproto_getter,
                                   &descriptor_table_raftrpc_2eproto_once,
                                   file_level_metadata_raftrpc_2eproto[1]);
}
// ===================================================================

class AppendntriesReply::_Internal {
 public:
};

AppendntriesReply::AppendntriesReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RpcModule.AppendntriesReply)
}
AppendntriesReply::AppendntriesReply(
    ::google::protobuf::Arena* arena, const AppendntriesReply& from)
    : AppendntriesReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppendntriesReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppendntriesReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           0,
           offsetof(Impl_, matchindex_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::matchindex_));
}
AppendntriesReply::~AppendntriesReply() {
  // @@protoc_insertion_point(destructor:RpcModule.AppendntriesReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppendntriesReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AppendntriesReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AppendntriesReply, _impl_._cached_size_),
              false,
          },
          &AppendntriesReply::MergeImpl,
          &AppendntriesReply::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AppendntriesReply::Clear() {
// @@protoc_insertion_point(message_clear_start:RpcModule.AppendntriesReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.matchindex_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.matchindex_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppendntriesReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> AppendntriesReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppendntriesReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RpcModule::AppendntriesReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendntriesReply, _impl_.term_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AppendntriesReply, _impl_.term_)}},
    // bool success = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppendntriesReply, _impl_.success_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AppendntriesReply, _impl_.success_)}},
    // int32 matchIndex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppendntriesReply, _impl_.matchindex_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AppendntriesReply, _impl_.matchindex_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 term = 1;
    {PROTOBUF_FIELD_OFFSET(AppendntriesReply, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool success = 2;
    {PROTOBUF_FIELD_OFFSET(AppendntriesReply, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 matchIndex = 3;
    {PROTOBUF_FIELD_OFFSET(AppendntriesReply, _impl_.matchindex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppendntriesReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpcModule.AppendntriesReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 term = 1;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_term(), target);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_success(), target);
  }

  // int32 matchIndex = 3;
  if (this->_internal_matchindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_matchindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpcModule.AppendntriesReply)
  return target;
}

::size_t AppendntriesReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RpcModule.AppendntriesReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  // int32 matchIndex = 3;
  if (this->_internal_matchindex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_matchindex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AppendntriesReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AppendntriesReply*>(&to_msg);
  auto& from = static_cast<const AppendntriesReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RpcModule.AppendntriesReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_term() != 0) {
    _this->_impl_.term_ = from._impl_.term_;
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  if (from._internal_matchindex() != 0) {
    _this->_impl_.matchindex_ = from._impl_.matchindex_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppendntriesReply::CopyFrom(const AppendntriesReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RpcModule.AppendntriesReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppendntriesReply::IsInitialized() const {
  return true;
}

void AppendntriesReply::InternalSwap(AppendntriesReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppendntriesReply, _impl_.matchindex_)
      + sizeof(AppendntriesReply::_impl_.matchindex_)
      - PROTOBUF_FIELD_OFFSET(AppendntriesReply, _impl_.term_)>(
          reinterpret_cast<char*>(&_impl_.term_),
          reinterpret_cast<char*>(&other->_impl_.term_));
}

::google::protobuf::Metadata AppendntriesReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_raftrpc_2eproto_getter,
                                   &descriptor_table_raftrpc_2eproto_once,
                                   file_level_metadata_raftrpc_2eproto[2]);
}
// ===================================================================

class RequestVoteRequest::_Internal {
 public:
};

RequestVoteRequest::RequestVoteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RpcModule.RequestVoteRequest)
}
RequestVoteRequest::RequestVoteRequest(
    ::google::protobuf::Arena* arena, const RequestVoteRequest& from)
    : RequestVoteRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RequestVoteRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RequestVoteRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           0,
           offsetof(Impl_, lastlogterm_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::lastlogterm_));
}
RequestVoteRequest::~RequestVoteRequest() {
  // @@protoc_insertion_point(destructor:RpcModule.RequestVoteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RequestVoteRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RequestVoteRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_._cached_size_),
              false,
          },
          &RequestVoteRequest::MergeImpl,
          &RequestVoteRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RequestVoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RpcModule.RequestVoteRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lastlogterm_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.lastlogterm_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RequestVoteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> RequestVoteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RequestVoteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RpcModule::RequestVoteRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 lastLogTerm = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteRequest, _impl_.lastlogterm_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.lastlogterm_)}},
    // int32 term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteRequest, _impl_.term_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.term_)}},
    // int32 candidateId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteRequest, _impl_.candidateid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.candidateid_)}},
    // int32 lastLogIndex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteRequest, _impl_.lastlogindex_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.lastlogindex_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 term = 1;
    {PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 candidateId = 2;
    {PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.candidateid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 lastLogIndex = 3;
    {PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.lastlogindex_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 lastLogTerm = 4;
    {PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.lastlogterm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RequestVoteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpcModule.RequestVoteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 term = 1;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_term(), target);
  }

  // int32 candidateId = 2;
  if (this->_internal_candidateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_candidateid(), target);
  }

  // int32 lastLogIndex = 3;
  if (this->_internal_lastlogindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_lastlogindex(), target);
  }

  // int32 lastLogTerm = 4;
  if (this->_internal_lastlogterm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_lastlogterm(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpcModule.RequestVoteRequest)
  return target;
}

::size_t RequestVoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RpcModule.RequestVoteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  // int32 candidateId = 2;
  if (this->_internal_candidateid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_candidateid());
  }

  // int32 lastLogIndex = 3;
  if (this->_internal_lastlogindex() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lastlogindex());
  }

  // int32 lastLogTerm = 4;
  if (this->_internal_lastlogterm() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lastlogterm());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RequestVoteRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestVoteRequest*>(&to_msg);
  auto& from = static_cast<const RequestVoteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RpcModule.RequestVoteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_term() != 0) {
    _this->_impl_.term_ = from._impl_.term_;
  }
  if (from._internal_candidateid() != 0) {
    _this->_impl_.candidateid_ = from._impl_.candidateid_;
  }
  if (from._internal_lastlogindex() != 0) {
    _this->_impl_.lastlogindex_ = from._impl_.lastlogindex_;
  }
  if (from._internal_lastlogterm() != 0) {
    _this->_impl_.lastlogterm_ = from._impl_.lastlogterm_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestVoteRequest::CopyFrom(const RequestVoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RpcModule.RequestVoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RequestVoteRequest::IsInitialized() const {
  return true;
}

void RequestVoteRequest::InternalSwap(RequestVoteRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.lastlogterm_)
      + sizeof(RequestVoteRequest::_impl_.lastlogterm_)
      - PROTOBUF_FIELD_OFFSET(RequestVoteRequest, _impl_.term_)>(
          reinterpret_cast<char*>(&_impl_.term_),
          reinterpret_cast<char*>(&other->_impl_.term_));
}

::google::protobuf::Metadata RequestVoteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_raftrpc_2eproto_getter,
                                   &descriptor_table_raftrpc_2eproto_once,
                                   file_level_metadata_raftrpc_2eproto[3]);
}
// ===================================================================

class RequestVoteReply::_Internal {
 public:
};

RequestVoteReply::RequestVoteReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RpcModule.RequestVoteReply)
}
RequestVoteReply::RequestVoteReply(
    ::google::protobuf::Arena* arena, const RequestVoteReply& from)
    : RequestVoteReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RequestVoteReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RequestVoteReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, term_),
           0,
           offsetof(Impl_, votegranted_) -
               offsetof(Impl_, term_) +
               sizeof(Impl_::votegranted_));
}
RequestVoteReply::~RequestVoteReply() {
  // @@protoc_insertion_point(destructor:RpcModule.RequestVoteReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RequestVoteReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RequestVoteReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_._cached_size_),
              false,
          },
          &RequestVoteReply::MergeImpl,
          &RequestVoteReply::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RequestVoteReply::Clear() {
// @@protoc_insertion_point(message_clear_start:RpcModule.RequestVoteReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.term_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.votegranted_) -
      reinterpret_cast<char*>(&_impl_.term_)) + sizeof(_impl_.votegranted_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RequestVoteReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RequestVoteReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RequestVoteReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RpcModule::RequestVoteReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool voteGranted = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RequestVoteReply, _impl_.votegranted_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.votegranted_)}},
    // int32 term = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestVoteReply, _impl_.term_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.term_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 term = 1;
    {PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.term_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool voteGranted = 2;
    {PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.votegranted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RequestVoteReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RpcModule.RequestVoteReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 term = 1;
  if (this->_internal_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_term(), target);
  }

  // bool voteGranted = 2;
  if (this->_internal_votegranted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_votegranted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RpcModule.RequestVoteReply)
  return target;
}

::size_t RequestVoteReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RpcModule.RequestVoteReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 term = 1;
  if (this->_internal_term() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_term());
  }

  // bool voteGranted = 2;
  if (this->_internal_votegranted() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RequestVoteReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestVoteReply*>(&to_msg);
  auto& from = static_cast<const RequestVoteReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RpcModule.RequestVoteReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_term() != 0) {
    _this->_impl_.term_ = from._impl_.term_;
  }
  if (from._internal_votegranted() != 0) {
    _this->_impl_.votegranted_ = from._impl_.votegranted_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestVoteReply::CopyFrom(const RequestVoteReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RpcModule.RequestVoteReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RequestVoteReply::IsInitialized() const {
  return true;
}

void RequestVoteReply::InternalSwap(RequestVoteReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.votegranted_)
      + sizeof(RequestVoteReply::_impl_.votegranted_)
      - PROTOBUF_FIELD_OFFSET(RequestVoteReply, _impl_.term_)>(
          reinterpret_cast<char*>(&_impl_.term_),
          reinterpret_cast<char*>(&other->_impl_.term_));
}

::google::protobuf::Metadata RequestVoteReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_raftrpc_2eproto_getter,
                                   &descriptor_table_raftrpc_2eproto_once,
                                   file_level_metadata_raftrpc_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace RpcModule
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_raftrpc_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
